(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{353:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"数据类型与类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型与类型转换"}},[s._v("¶")]),s._v(" 数据类型与类型转换")]),s._v(" "),a("h2",{attrs:{id:"一、简单数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、简单数据类型"}},[s._v("¶")]),s._v(" 一、简单数据类型")]),s._v(" "),a("ul",[a("li",[s._v("字符串 str")]),s._v(" "),a("li",[s._v("整数 int")]),s._v(" "),a("li",[s._v("浮点数 float")]),s._v(" "),a("li",[s._v("布尔值 bool - "),a("a",{attrs:{href:"./10-bool"}},[s._v("知识点整合在这里")])]),s._v(" "),a("li",[s._v("空 None")])]),s._v(" "),a("h3",{attrs:{id:"补充：复杂数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充：复杂数据类型"}},[s._v("¶")]),s._v(" 补充：复杂数据类型")]),s._v(" "),a("ul",[a("li",[s._v("列表 list - "),a("a",{attrs:{href:"./06-list"}},[s._v("知识点整合在这里")])]),s._v(" "),a("li",[s._v("字典 dict - "),a("a",{attrs:{href:"./07-dict"}},[s._v("知识点整合在这里")])]),s._v(" "),a("li",[s._v("函数 function - "),a("a",{attrs:{href:"./12-function"}},[s._v("知识点整合在这里")])]),s._v(" "),a("li",[s._v("元祖 tuple - "),a("a",{attrs:{href:"./15-tuple"}},[s._v("知识点整合在这里")])])]),s._v(" "),a("h3",{attrs:{id:"_1、字符串-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、字符串-str"}},[s._v("¶")]),s._v(" 1、字符串 str")]),s._v(" "),a("p",[s._v("字符串：英文string，简写str。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'小石头:'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2019'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'24'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 小石头: 2019 12 24")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"平安夜，祝你一生平安。Merry Christmas！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 平安夜，祝你一生平安。Merry Christmas！")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("以上，包裹在单引号和双引号里边的内容，如"),a("code",[s._v("‘小石头’")]),s._v("、"),a("code",[s._v("‘2019’")]),s._v("这些就是字符串。")]),s._v(" "),a("p",[s._v("换言之，"),a("strong",[s._v("但凡包裹在英文格式下的 单引号、双引号或三引号 里的内容，不论引号里边是英文、中文、甚至是数字、符号、火星文等，她都叫做字符串。")])]),s._v(" "),a("ul",[a("li",[s._v("强调⚠️ 引号！引号！引号！！！")])]),s._v(" "),a("h3",{attrs:{id:"_2、整数-int"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、整数-int"}},[s._v("¶")]),s._v(" 2、整数 int")]),s._v(" "),a("p",[s._v("整数：英文为integer，简写做int。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("year "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("\nmonth "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以为负数")]),s._v("\nday "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以做运算")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Today is'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("day"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Today is 2019 -12 -12")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("以上，"),a("code",[s._v("2019")]),s._v("、"),a("code",[s._v("12")]),s._v("、"),a("code",[s._v("24")]),s._v("这三个都是整数。")]),s._v(" "),a("p",[s._v("没有引号包裹的、没有小数点的、整数数字，就是整数类型。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意⚠️：一旦数字被引号包裹，他就是字符串类型。")])]),s._v(" "),a("h3",{attrs:{id:"_3、浮点数-float"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、浮点数-float"}},[s._v("¶")]),s._v(" 3、浮点数 float")]),s._v(" "),a("p",[s._v("浮点数: 英文名是float，与整数(int)和字符串(str)不同。")]),s._v(" "),a("p",[s._v("浮点数没有简写。\n不过非常好识别，它比整数多了一个小数点『. 』。")]),s._v(" "),a("p",[a("strong",[s._v("换言之，带小数点的数字即是浮点数。")])]),s._v(" "),a("p",[s._v("比如下列代码中的数字都是浮点数。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 20.19")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以为负数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -12.25")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("520.1314")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("07.11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以做数学运算")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 527.2414")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("注意⚠️：同样不能有引号包裹。")])]),s._v(" "),a("p",[a("em",[s._v("浮点数还有一个计算结果有精度误差的问题。详见下边番外篇。")])]),s._v(" "),a("h3",{attrs:{id:"_4、空值-none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、空值-none"}},[s._v("¶")]),s._v(" 4、空值 None")]),s._v(" "),a("p",[s._v("它代表的是【空值】，自成一派，数据类型是"),a("code",[s._v("NoneType")]),s._v("。")]),s._v(" "),a("p",[s._v("它和0的区别：0是整数0，None是什么都没有。")]),s._v(" "),a("h4",{attrs:{id:"判断一个变量为none的几种方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个变量为none的几种方法"}},[s._v("¶")]),s._v(" 判断一个变量为None的几种方法")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("if variable is None")])]),s._v(" "),a("li",[a("code",[s._v("not variable")])]),s._v(" "),a("li",[a("code",[s._v("if not (a is None)")])])]),s._v(" "),a("p",[s._v("示例代码：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断为None的几种方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a is None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行该行，并打印：a is None")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a is not None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a 的类型是 None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行该行，并打印：a 的类型是 None")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a 不是 None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a is None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'是错的'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a is None'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'是对的'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行该行，并打印：a is None 是对的")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h2",{attrs:{id:"二、类型查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、类型查询"}},[s._v("¶")]),s._v(" 二、类型查询")]),s._v(" "),a("ul",[a("li",[s._v("type()函数")])]),s._v(" "),a("h3",{attrs:{id:"_1、type-函数作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、type-函数作用"}},[s._v("¶")]),s._v(" 1、type()函数作用")]),s._v(" "),a("p",[s._v("查询、获取数据的类型。")]),s._v(" "),a("p",[s._v("既然存在不同的类型，我们就需要一个类型检查工具，来告诉我们这个数据究竟是什么类型。")]),s._v(" "),a("h3",{attrs:{id:"_2、type用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、type用法"}},[s._v("¶")]),s._v(" 2、type用法")]),s._v(" "),a("p",[s._v("只需把查询的内容放在括号里就行。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'俺是字符串'")]),s._v("\nvalue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\nflr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.4")]),s._v("\nnumberStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如下使用type：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'str'>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'int'>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'float'>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("numberStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'str'>  尽管是123数字，只要包裹在英文引号中就是字符串")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("如上打印结果，代表类型的样式为"),a("code",[s._v("<class '类型'>")]),s._v("。其中：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("str代表字符串，全称为string")])]),s._v(" "),a("li",[a("p",[s._v("整数的英文简称为int，全称为integer")])]),s._v(" "),a("li",[a("p",[s._v("float就是浮点数类型")])])]),s._v(" "),a("h3",{attrs:{id:"_3、数据类型查询结果表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、数据类型查询结果表"}},[s._v("¶")]),s._v(" 3、数据类型查询结果表")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 备用代码，定义一个函数a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("type()类型获取")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[s._v("执行打印")]),s._v(" "),a("th",[s._v("打印结果")]),s._v(" "),a("th",[s._v("汉语含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type('str'))")])]),s._v(" "),a("td",[s._v("# <class 'str'>")]),s._v(" "),a("td",[s._v("字符串")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type(1))")])]),s._v(" "),a("td",[s._v("# <class 'int'>")]),s._v(" "),a("td",[s._v("整数")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type(1.3))")])]),s._v(" "),a("td",[s._v("# <class 'float'>")]),s._v(" "),a("td",[s._v("浮点数")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type(True))")])]),s._v(" "),a("td",[s._v("# <class 'bool'>")]),s._v(" "),a("td",[s._v("布尔")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type(None))")])]),s._v(" "),a("td",[s._v("# <class 'NoneType'>")]),s._v(" "),a("td",[s._v("None")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type({}))")])]),s._v(" "),a("td",[s._v("# <class 'dict'>")]),s._v(" "),a("td",[s._v("字典")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type([]))")])]),s._v(" "),a("td",[s._v("# <class 'list'>")]),s._v(" "),a("td",[s._v("列表")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type(a))")])]),s._v(" "),a("td",[s._v("# <class 'function'>")]),s._v(" "),a("td",[s._v("函数")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("print(type((1,2,3)))")])]),s._v(" "),a("td",[s._v("# <class 'tuple'>")]),s._v(" "),a("td",[s._v("元祖")])])])]),s._v(" "),a("h2",{attrs:{id:"三、类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、类型转换"}},[s._v("¶")]),s._v(" 三、类型转换")]),s._v(" "),a("ul",[a("li",[s._v("str()函数")]),s._v(" "),a("li",[s._v("int()函数")]),s._v(" "),a("li",[s._v("float()函数")])]),s._v(" "),a("blockquote",[a("p",[s._v("所谓，道不同不相为谋，不同类型的数据不能拼接在一起。也不能一起共事。为了让他们一起共事，就有了类型转换这么一个“和稀泥”的操作：")])]),s._v(" "),a("p",[a("strong",[s._v("python是类型严格的语言，不像JS那样的弱类型语言，会自动进行类型的隐式转换。所以当不同类型的数据进行结合时，需要我们手动强制进行类型转换。")])]),s._v(" "),a("p",[s._v("强类型语言里，不同类型的数据之间需要进行类型转换才能一起“共事”。")]),s._v(" "),a("p",[s._v("比如，"),a("code",[s._v("1+'1'")]),s._v("这么写，在js中肯定没问题，因为会进行隐式类型转换，把数字1变成字符串1，然后就变成了字符串拼接，最后得到11。")]),s._v(" "),a("p",[s._v("但是python不会进行隐式类型转换，他发现你用数字1+字符串1，就会报语法错误。")]),s._v(" "),a("p",[s._v("因此当我们把两个不同类型的数据进行结合处理时，应该手动将其中一方的类型转换统一成跟另一方一样的。")]),s._v(" "),a("p",[s._v("依旧以"),a("code",[s._v("1+'1'")]),s._v("为例，进行手动类型转换的方法示例：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print(a + b)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# # 这么写报错。改正如下：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2，将字符串转换为int类型，进行加法运算")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 11，将整数转为字符串类型，进行字符串拼接。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("负责转换数据类型的函数一共有3种：str()、 int()和float()。")]),s._v(" "),a("h3",{attrs:{id:"_1、str-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、str-函数"}},[s._v("¶")]),s._v(" 1、str()函数")]),s._v(" "),a("p",[s._v("str()函数能将数据转换成其字符串类型，不管这个数据是int类型还是float类型，只要放到括号里。这个数据就能成为字符串类型。")]),s._v(" "),a("h4",{attrs:{id:"_1-1、整数-浮点数-转为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、整数-浮点数-转为字符串"}},[s._v("¶")]),s._v(" 1-1、整数/浮点数 - 转为字符串")]),s._v(" "),a("p",[s._v("运用：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# str()")]),s._v("\nwho "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我'")]),s._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\nitem "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'岁'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("who"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我18岁")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过str(age)一个步骤，可以将整数类型的【18】转化为字符串类型的【'18'】，成功完成数据拼接。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("以上是一种整数转换为字符串的方法。")]),s._v(" "),a("h4",{attrs:{id:"_1-2、第二种整数转换为字符串的方法-直接上引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、第二种整数转换为字符串的方法-直接上引号"}},[s._v("¶")]),s._v(" 1-2、第二种整数转换为字符串的方法 - 直接上引号")]),s._v(" "),a("p",[s._v("借用【引号】的帮助，直接将数字转为字符串：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# str()")]),s._v("\nwho "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我'")]),s._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\nitem "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'岁'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("who"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我18岁")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("缺陷：引号内我们使用的是数字，而不是变量名age。这是因为，当我们使用引号时，引号里的东西，都会被强制转换为字符串格式。如果使用变量名age，这里就会把age这个变量名转换为字符串，打印出“我age岁”")]),s._v(" "),a("h3",{attrs:{id:"_2、int-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、int-函数"}},[s._v("¶")]),s._v(" 2、int()函数")]),s._v(" "),a("p",[s._v("将其他数据转换为整数类型。当参数为小数时，会做"),a("code",[s._v("抹零、取整")]),s._v("处理。不会进行四舍五入的哦！")]),s._v(" "),a("p",[s._v("使用方法同str()一样，将你需要转换的内容放在括号里就行，像这样：int(转换的内容)。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# int")]),s._v("\nnum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("\nnum2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'8'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 9")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"注意⚠️：只有符合整数规范的字符串类数据，才能被int-强制转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意⚠️：只有符合整数规范的字符串类数据，才能被int-强制转换"}},[s._v("¶")]),s._v(" 注意⚠️：只有符合整数规范的字符串类数据，才能被int()强制转换:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("首先，整数形式的字符串比如'1'和'8'，可以被int()函数强制转换。")])]),s._v(" "),a("li",[a("p",[s._v("其次，文字形式，比如中文、火星文或者标点符号，"),a("strong",[s._v("不可以被int()函数强制转换")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("最后，小数形式的字符串，由于Python的语法规则，也"),a("strong",[s._v("不能直接使用int()函数强制转换")]),s._v("。比方说下列代码，如果点击运行，程序会报错。")])])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ValueError: invalid literal for int() with base 10: '1.8'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# （值异常：浮点类型字符串无法使用int()强制转换）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("虽然浮点形式的字符串，不能使用int()函数。但浮点数是可以被int()函数强制转换的")]),s._v(" "),a("p",[a("code",[s._v("可以先将字符串转换为浮点类型，再将浮点数转换为int类型。")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1，先将字符串'1.8'转换为浮点数1.8，再直接对浮点数1.8取整得到数字1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3、float-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、float-函数"}},[s._v("¶")]),s._v(" 3、float()函数")]),s._v(" "),a("h4",{attrs:{id:"_3-1、使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、使用"}},[s._v("¶")]),s._v(" 3-1、使用")]),s._v(" "),a("p",[s._v("将需要转换的数据放在括号里，像这样：float(数据)。")]),s._v(" "),a("h4",{attrs:{id:"_3-2、规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、规则"}},[s._v("¶")]),s._v(" 3-2、规则")]),s._v(" "),a("p",[s._v("float()函数也可以将整数和字符串转换为浮点类型。")]),s._v(" "),a("p",[s._v("但同时，如果括号里面的数据是字符串类型，那这个数据一定得是数字形式。如"),a("code",[s._v("'2.3'")]),s._v(","),a("code",[s._v("'52.1'")]),s._v("这样，而不是"),a("code",[s._v("'我是汉子'")]),s._v("这样的纯文字")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("43.2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 43.2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"四、数据类型的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、数据类型的应用"}},[s._v("¶")]),s._v(" 四、数据类型的应用")]),s._v(" "),a("ul",[a("li",[s._v("字符串拼接")]),s._v(" "),a("li",[s._v("四则运算")])]),s._v(" "),a("h3",{attrs:{id:"_1、四则运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、四则运算"}},[s._v("¶")]),s._v(" 1、四则运算")]),s._v(" "),a("p",[s._v("Python里的整数、浮点数和数学意义的整数、小数是一样的，它最重要的作用是与运算符号结合，进行数学计算。")]),s._v(" "),a("h3",{attrs:{id:"_2、python中的算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、python中的算术运算符"}},[s._v("¶")]),s._v(" 2、Python中的算术运算符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("运算符")]),s._v(" "),a("th",[s._v("含义")]),s._v(" "),a("th",[s._v("示例")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("+")]),s._v(" "),a("td",[s._v("加")]),s._v(" "),a("td",[s._v("1 + 1")])]),s._v(" "),a("tr",[a("td",[s._v("-")]),s._v(" "),a("td",[s._v("减")]),s._v(" "),a("td",[s._v("2 - 1")])]),s._v(" "),a("tr",[a("td",[s._v("*")]),s._v(" "),a("td",[s._v("乘")]),s._v(" "),a("td",[s._v("1 * 2")])]),s._v(" "),a("tr",[a("td",[s._v("/")]),s._v(" "),a("td",[s._v("除")]),s._v(" "),a("td",[s._v("4 / 2")])]),s._v(" "),a("tr",[a("td",[s._v("%")]),s._v(" "),a("td",[s._v("取模 - 返回除法的余数")]),s._v(" "),a("td",[s._v("5 % 2 得到5除以2的余数")])]),s._v(" "),a("tr",[a("td",[s._v("**")]),s._v(" "),a("td",[s._v("幂 - 返回x的y次幂")]),s._v(" "),a("td",[s._v("2 ** 3 得到2的3次方")])]),s._v(" "),a("tr",[a("td",[s._v("//")]),s._v(" "),a("td",[s._v("取整除 - 返回商的整数部分")]),s._v(" "),a("td",[s._v("11 // 2 得到11/2的商再取整")])])])]),s._v(" "),a("p",[s._v("对上表中的运算符写几个例子运行一下：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运算符示例")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 39")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1993")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 27")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20191231")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20200101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 407864905514331")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 202.0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 23")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"_3、运算优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、运算优先级"}},[s._v("¶")]),s._v(" 3、运算优先级")]),s._v(" "),a("p",[s._v("和我们平时的计算优先级是一样的：")]),s._v(" "),a("p",[s._v("从左到右计算，括号里的优先计算。")]),s._v(" "),a("p",[s._v("先乘除，后加减。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先口算，再运行，看你算的对不对。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("124")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("325235")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1251")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6236")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("124")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("125")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("326")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_4、字符串拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、字符串拼接"}},[s._v("¶")]),s._v(" 4、字符串拼接")]),s._v(" "),a("p",[s._v("这就和Javascript中的一样了\n非常简单，就是利用字符串拼接符号【+】，将需要拼接的变量连在一起就行了。")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 字符串拼接示例")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我'")]),s._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'叫'")]),s._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'小'")]),s._v("\nd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'石'")]),s._v("\ne "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'头'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我叫小石头")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("blockquote",[a("p",[s._v("切记⚠️：做字符串拼接也好、运算符表达式也好，+号或其他符号两边的数据类型必须一致，否则会报错TypeError（详见第三篇错误类型合集B项错误记载）。")])]),s._v(" "),a("h2",{attrs:{id:"五、番外-浮点数计算精度问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、番外-浮点数计算精度问题"}},[s._v("¶")]),s._v(" 五、番外 - 浮点数计算精度问题")]),s._v(" "),a("p",[s._v("运算下边的代码：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.55")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0.8500000000000001")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("发现打印结果并不显而易见的0.85，而是0.8500000000000001。")]),s._v(" "),a("p",[s._v("为什么不是【0.85】，而尾巴多了一个【1】呢？这是因为，Python计算浮点数时，会先把0.55和0.3转化成二进制数【注：二进制数由0和1表示，逢二进一】，如下：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进制转换")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("十进制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1000110011001100110011001100110011001100110011001101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("二进制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("十进制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0100110011001100110011001100110011001100110011001101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("二进制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("而在这个转化过程中存在误差，这样，就造成了我们与程序计算结果的差异。")]),s._v(" "),a("p",[s._v("然后，这俩二进制数通过二进制法则运算后，再通过复杂的计算公式，将二进制结果转成十进制小数。")]),s._v(" "),a("Vssue",{attrs:{title:"Python 数据类型与类型转换"}})],1)},[],!1,null,null,null);t.default=e.exports}}]);