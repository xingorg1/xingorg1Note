(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{317:function(t,s,a){t.exports=a.p+"assets/img/nextTick1.97323dfb.png"},318:function(t,s,a){t.exports=a.p+"assets/img/nextTick2.0d0687c7.png"},319:function(t,s,a){t.exports=a.p+"assets/img/MutationObserver-browser.905f194d.png"},320:function(t,s,a){t.exports=a.p+"assets/img/nextTick3.95282db5.png"},337:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nexttick源码解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick源码解析"}},[t._v("¶")]),t._v(" nextTick源码解析")]),t._v(" "),e("h2",{attrs:{id:"_1、整体入手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、整体入手"}},[t._v("¶")]),t._v(" 1、整体入手")]),t._v(" "),e("p",[t._v("阅读代码和画画是一样的，忌讳一开始就从细节下手（比如一行一行读），我们先将细节代码折叠起来，整体观察nextTick源码的几大块。")]),t._v(" "),e("p",[t._v("折叠后代码如下图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(317),alt:"整体观察代码结构"}})]),t._v(" "),e("p",[t._v("上图中，可以看到：")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("nextTick")]),t._v("等于一个立即执行函数。函数执行后，内部返回另一个匿名函数"),e("code",[t._v("function (cb, ctx)")]),t._v("。从语义化命名可以分析，第一个参数"),e("code",[t._v("cb")]),t._v("是个回调函数、"),e("code",[t._v("ctx")]),t._v("这里先猜测应该是个上下文。")])]),t._v(" "),e("li",[e("p",[t._v("在"),e("code",[t._v("return")]),t._v("返回之前，立即执行函数被调用后，函数内部先用var定义了三个参数、用function声明一个函数。")])])]),t._v(" "),e("p",[t._v("先不管这些变量是干啥用的。光从语义化命名上瞎分析一下：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("callbacks")]),t._v("可能是一个装callback回调的数组，可能是将来有多个回调的时候模拟队列执行效果用的。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pending")]),t._v("是一个布尔值。pending这个单词在接口请求中会看到，可能是用来标识某个状态是否正在进行中的。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("timeFunc")]),t._v("目前看来就不知道具体干啥的了。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("nextTickHandler")]),t._v("函数先不管。用到的时候再来看。")])])]),t._v(" "),e("p",[t._v("以上，就是初始化对代码的分析。")]),t._v(" "),e("h2",{attrs:{id:"_2、逐行解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、逐行解析"}},[t._v("¶")]),t._v(" 2、逐行解析")]),t._v(" "),e("p",[t._v("看完大的代码块结构后，可以按照js引擎解析代码的顺序来分析源码了。前边的变量和函数声明看完后，就到解析if语句了。")]),t._v(" "),e("p",[t._v("在if条件中，有一个判断："),e("code",[t._v("typeof MutationObserver !== 'undefined' && !hasMutationObserverBug")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("MutationObserver")]),t._v("这玩意儿是干啥的？")]),t._v(" "),e("h2",{attrs:{id:"a、mutationobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a、mutationobserver"}},[t._v("¶")]),t._v(" A、MutationObserver")]),t._v(" "),e("p",[t._v("度娘说他"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver",target:"_blank",rel:"noopener noreferrer"}},[t._v("“提供了监视对DOM树所做更改的能力”"),e("OutboundLink")],1),t._v("。大白话粗糙理解就是他能监听dom修改。")]),t._v(" "),e("p",[t._v("是HTML5中的一个新特性。")]),t._v(" "),e("h4",{attrs:{id:"mutationobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserver"}},[t._v("¶")]),t._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver/MutationObserver",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("MutationObserver()")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("该属性提供一个构造函数"),e("code",[t._v("MutationObserver()")])]),t._v(" "),e("blockquote",[e("p",[t._v("通过"),e("code",[t._v("new MutationObserver()")]),t._v("可以得到一个新的观察器，它会在触发指定 DOM 事件时，调用指定的回调函数。")]),t._v(" "),e("p",[e("strong",[t._v("MutationObserver 对 DOM 的观察不会立即启动；而必须先调用 observe() 方法来确定，要监听哪一部分的 DOM 以及要响应哪些更改。")])])]),t._v(" "),e("h4",{attrs:{id:"observe-target-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observe-target-options"}},[t._v("¶")]),t._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver/observe",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("observe(target[, options])")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("启用观察者，开始根据配置监听指定DOM。无返回值。")]),t._v(" "),e("p",[t._v("接收两个参数：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("target")]),t._v("是Node/Element节点，表示要监听的DOM对象。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("options")]),t._v("是监听配置，配置了target的哪些变动需要出发callback回调。配置项相关参数参照"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserverInit",target:"_blank",rel:"noopener noreferrer"}},[t._v("MutationObserverInit配置字典"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("code",[t._v("attributes")]),t._v(" : true|false， 观察受监视DOM元素的任意一个属性值变更")]),t._v(" "),e("li",[e("code",[t._v("attributeFilter")]),t._v(": 监听多个特定属性，放到数组里。如："),e("code",[t._v("['class', 'id', 'src']")])]),t._v(" "),e("li",[e("code",[t._v("characterData")]),t._v(" : true|false， 为true，则在更改指定要 监听的文本节点的内容时，将调用callback回调。")]),t._v(" "),e("li",[e("code",[t._v("childList")]),t._v(" :true|false， 为 true 就监视指定DOM对象添加或删除新的子节点的情况")]),t._v(" "),e("li",[t._v("还有其他好几个扩展情况。参考"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserverInit",target:"_blank",rel:"noopener noreferrer"}},[t._v("MutationObserverInit配置字典"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("当调用 observe() 方法时，childList，attributes 或者 characterData 三个属性之中，至少有一个必须为 true，否则会抛出 TypeError 异常。")])])])]),t._v(" "),e("h4",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("¶")]),t._v(" 语法")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 得到要观察的元素")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" elementToObserve "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#targetElementId"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造MutationObserver对象，传递一个函数当做参数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用观察者observe(), 监听的DOM对象是elementToObserve")]),t._v("\nobserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elementToObserve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听规则，当子节点或目标节点整个节点树中的所有节点被添加/删除的时候，触发上边的callback回调函数")]),t._v("\n  subtree"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  childList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("当MutationObserver监听到我们注册的DOM被改变(无论是DOM节点改变、还是DOM的属性被改变，主要监听DOM的哪部分改变啥还是看你的配置项)时，回调函数callback就会被调用。\n"),e("em",[t._v("（有点像我们派到云云DOM对象中的一个间谍，监视我们指定的dom，当发生改变时就告知我们）")])]),t._v(" "),e("p",[t._v("callback回调函数拥有两个参数：一个是描述所有被触发改动的 MutationRecord 对象数组，另一个是调用该函数的MutationObserver 对象。\n不过这都是该属性的用法了，VUE关于nextTick的源码里关于这个属性没用到callback的这俩参数。这里不做展开讲解，详情可以看这里"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver/MutationObserver",target:"_blank",rel:"noopener noreferrer"}},[t._v(" MDN MutationObserver()"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"b、if条件成立"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b、if条件成立"}},[t._v("¶")]),t._v(" B、if条件成立")]),t._v(" "),e("p",[t._v("好了，掌握了MutationObserver和他的用法后，再来回归源码，if里边的代码就很好理解了：\n"),e("img",{attrs:{src:a(318),alt:"MutationObserver判断成功"}})]),t._v(" "),e("p",[t._v("首先，作为H5新特性，其兼容性就是不太好（IE爸爸：看我干嘛！）\n"),e("img",{attrs:{src:a(319),alt:"MutationObserver兼容性"}})]),t._v(" "),e("p",[t._v("所以，vue这里做了容错，先判断MutationObserver的类型是否为“undefined”，来检查浏览器是否支持该特性。如果支持这个属性且无bug，那么就走if语句的内容")]),t._v(" "),e("p",[t._v("if语句内部三个var：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textNode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextTickHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("ul",[e("li",[t._v("定义了一个"),e("code",[t._v("counter")]),t._v("数字")]),t._v(" "),e("li",[e("code",[t._v("textNode")]),t._v("变量用于存放"),e("code",[t._v("document.createTextNode")]),t._v("创建的一个文本节点，文本内容是counter的值")]),t._v(" "),e("li",[e("code",[t._v("new MutationObserver()")]),t._v(" 这一行，相信有了上边知识点的铺垫，你就很容易理解了。构造并返回一个新的observer，用于在指定的DOM（就是上边的textNode）发生变化时，调用回调函数"),e("code",[t._v("nextTickHandler")]),t._v("。")])]),t._v(" "),e("p",[t._v("接下来观察者observer，根据MutationObserverInit配置字段的设置，监听textNode元素。当textNode文本节点的文本内容发生一丢丢变化时，就会立即触发nextTickHandler回调函数。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" observer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextTickHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("textNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  characterData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("再接下来就是把代码顶部定义的timerFunc变量赋值为一个函数。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("timerFunc")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  textNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("函数内部通过"),e("code",[t._v("(counter + 1) % 2")]),t._v("的表达式思想，让counter的值因为每次timeFunc函数的调用都会变成0/1。\n并通过将counter变化后的值赋值给textNode节点，实现改变textNode文本节点的内容，达到触发observer监听、进而调取nextTickHandler回调函数的目的。")]),t._v(" "),e("p",[t._v("至此，if语句内部流程就走完了。我们趁热打铁，先不看else里的内容（脚指头掰也能想到里边应该是不兼容MutationObserver后的降级方案了。")]),t._v(" "),e("p",[t._v("根据if里边的思路，我们该看nextTickHandler里都是啥了，监听了DOM变化后，每次回调都干了撒？")]),t._v(" "),e("h2",{attrs:{id:"c、nexttickhandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c、nexttickhandler"}},[t._v("¶")]),t._v(" C、"),e("code",[t._v("nextTickHandler()")])]),t._v(" "),e("p",[t._v("逐句阅读代码：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\npending "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("每次nextTickHandler调用，"),e("code",[t._v("pending")]),t._v("先置为false，之前猜测pending是一个锁的想法，进一步得到了验证。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" copies "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callbacks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("利用数组的slice()方法，传入起始下标0，不传终点下标，得到一个浅拷贝callbacks的新数组，并复制给"),e("code",[t._v("copies")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\ncallbacks "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("重新赋值"),e("code",[t._v("callback")]),t._v("为一个空数组")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" copies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    copies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("最后遍历"),e("code",[t._v("copies")]),t._v("数组，顺序调取copies队列里的函数。\n郁闷了，这个copies里的（确切的说是callbacks里的）每一项函数都是个啥？哪来的？")]),t._v(" "),e("p",[t._v("这得看看callbacks这个变量在哪里赋值了、赋值的都是啥。于是我们\n全局搜索callbacks，发现除了目前看到的三个，还有一个在"),e("code",[t._v("return")]),t._v(" 的匿名函数里。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(320),alt:"callbacks全局搜索"}})]),t._v(" "),e("h2",{attrs:{id:"d、return"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d、return"}},[t._v("¶")]),t._v(" D、"),e("code",[t._v("return")])]),t._v(" "),e("p",[t._v("本着哪里不会点哪里的原则，说明到了我们观察返回的这个匿名函数内部代码的时候了。")]),t._v(" "),e("p",[t._v("源码里，nextTick等于一个立即执行函数，函数执行完毕return一个匿名函数如下，也就是说，下边的代码就是我们调用nextTick的时候调用的函数。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" func "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      cb\n  callbacks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pending"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  pending "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("timerFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextTickHandler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("h3",{attrs:{id:"nexttick用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nexttick用法"}},[t._v("¶")]),t._v(" "),e("code",[t._v("nextTick")]),t._v("用法")]),t._v(" "),e("p",[t._v("我们先回忆一下nextTick的用法：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// modify data")]),t._v("\nvm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM not updated yet")]),t._v("\nVue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM updated")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("可以看到，nextTick的第一个参数传入一个匿名函数。函数里边代码就是我们开发者执行nextTick后要运行的内容。")]),t._v(" "),e("p",[t._v("于是我们知道了，我们调用nextTick时传入的"),e("code",[t._v("function () { // DOM updated }")]),t._v("对应的就是return 后边匿名函数的"),e("code",[t._v("cb")]),t._v("参数。")]),t._v(" "),e("h3",{attrs:{id:"执行上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("¶")]),t._v(" 执行上下文")]),t._v(" "),e("p",[t._v("在匿名函数里边，先判断nextTick调用时第二个参数是否填，如果没填就直接将cb函数赋值给func变量。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" func "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  cb\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("如果填了第二个参数，func就等于一个匿名函数，函数内部利用"),e("code",[t._v("call")]),t._v("调用cb回调，改变cb内部this指向。由call调用时的传参为ctx可以推导出，nextTick的第二个参数ctx是一个上下文参数，用于改变第一个参数内部的this指向。")]),t._v(" "),e("h3",{attrs:{id:"callbacks队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#callbacks队列"}},[t._v("¶")]),t._v(" callbacks队列")]),t._v(" "),e("p",[t._v("紧接着将func函数推送到callbacks队列中："),e("code",[t._v("callbacks.push(func)")]),t._v("。说明callbacks（也就是"),e("code",[t._v("nextTickHandler")]),t._v("函数里的copies）里存的就是nextTick的第一个回调函数参数。for循环执行的也就是他们。")]),t._v(" "),e("h3",{attrs:{id:"pending加锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pending加锁"}},[t._v("¶")]),t._v(" pending加锁")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if (pending) return\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("利用闭包，判断如果上一个nextTick未执行完毕，则本次的nextTick不能完整执行、会运行到了if这里被中断。")]),t._v(" "),e("p",[t._v("如果pending为false，说明上次的nextTick回调函数已经完了，可以进行本次执行。并紧接着"),e("code",[t._v("pending = true")]),t._v("将本次的nextTick调用状态改为pending中。")]),t._v(" "),e("p",[t._v("这pending就好像收费站的栅栏，上一辆车过去后立马落下杆子，上一辆车未缴费完毕、开走之前，不收起杆子。每次起杆子前，都看下是否有上一辆车正在堵着通道在缴费，如果没有，则可以开启杆子，让一辆车过去，放过一辆车后立马又落下杆子阻止后边的车。")]),t._v(" "),e("h3",{attrs:{id:"timerfunc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timerfunc"}},[t._v("¶")]),t._v(" timerFunc")]),t._v(" "),e("p",[t._v("最后调用"),e("code",[t._v("timerFunc(nextTickHandler, 0)")]),t._v("。")]),t._v(" "),e("p",[t._v("先来看看timerFunc是啥：")]),t._v(" "),e("p",[t._v("立即执行函数里声明后未被初始化")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timerFunc\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("紧接着判断MutationObserver可用的话，在if代码块里被赋值为函数：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("timerFunc")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  textNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counter\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("函数里修改counter的值并赋值给textNode.data:")]),t._v(" "),e("p",[t._v("这个我们上边分析过，当指定的DOM“textNode”文本节点的文本内容发生变化时，MutationObserver对象的ovserve监听方法就会立即调用回调函数"),e("code",[t._v("nextTickHandler")]),t._v("。")]),t._v(" "),e("p",[t._v("于是我们知道了整个流程：timerFunc调用，也就等于nextTickHandler调用，nextTickHandler调用后，内部遍历调用copies的每一项，即遍历调用多个nextTick的第一个函数参数（这是因为pending把下一个nextTick拦住了，不过每次调用nextTick时的第一个回调参数都被push到callbacks里了，当有几个被阻塞的nextTick回调还没被执行的情况下，callbacks数组里就可能不止一个回调函数，因此就需要用for循环依次调用）。")]),t._v(" "),e("p",[t._v("至此，我们的整个流程终于疏通完了。")]),t._v(" "),e("p",[t._v("等等，人家调用"),e("code",[t._v("timerFunc")]),t._v("时有传参啊。MutationObserver里给timerFunc赋值时，匿名函数没接收参数啊。")]),t._v(" "),e("h2",{attrs:{id:"优雅降级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优雅降级"}},[t._v("¶")]),t._v(" 优雅降级")]),t._v(" "),e("p",[t._v("这时我们全局搜索"),e("code",[t._v("timerFunc")]),t._v("，发现我们漏了一个else代码块还没看：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inBrowser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n      window "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" global "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" global "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  timerFunc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setImmediate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" setTimeout\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("这里，用“inBrowser”判断是否为浏览器环境，然后给context赋值为window/global/{}，")]),t._v(" "),e("p",[t._v("给timerFunc赋值为"),e("code",[t._v("context.setImmediate")]),t._v("(ie或者node环境)或者"),e("code",[t._v("window.setTimeout")]),t._v("（其他环境），主要看当前运行的环境。")]),t._v(" "),e("p",[t._v("这里是vue的降级处理方式，如果浏览器不支持MutationObserver的话，就用setImmediate，如果不支持setImmediate的话，就用setTimeout来模拟异步方式。")]),t._v(" "),e("p",[t._v("当流程走到else代码块里的话，timerFunc调用就需要传递一个匿名函数（这里为nextTickHandler）和一个interval的值（这里为0）了")]),t._v(" "),e("Vssue",{attrs:{title:"vue-nextTick源码解析"}})],1)},[],!1,null,null,null);s.default=n.exports}}]);