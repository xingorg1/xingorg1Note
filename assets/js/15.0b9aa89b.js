(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{304:function(s,a,t){s.exports=t.p+"assets/img/listXmind.4eeac6c7.png"},305:function(s,a,t){s.exports=t.p+"assets/img/listError.54a5545f.png"},351:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"数据类型-列表-list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-列表-list"}},[s._v("¶")]),s._v(" 数据类型 - 列表(list)")]),s._v(" "),n("h2",{attrs:{id:"一张图了解列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一张图了解列表"}},[s._v("¶")]),s._v(" 一张图了解列表")]),s._v(" "),n("p",[s._v("先来一个脑图，一目了然")]),s._v(" "),n("p",[s._v("如果你看图看不懂我简写的是啥意思，可以看图下的详细信息。\n"),n("img",{attrs:{src:t(304),alt:"列表知识点脑图"}})]),s._v(" "),n("h2",{attrs:{id:"列表是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表是什么"}},[s._v("¶")]),s._v(" 列表是什么")]),s._v(" "),n("p",[s._v("列表是一堆元素的汇总，长得和JS中的数组一样。")]),s._v(" "),n("p",[s._v("它是数据类型的一种："),n("code",[s._v("复杂数据类型")]),s._v("— —就是各种数据类型的集合")]),s._v(" "),n("p",[s._v("我们通常用列表+循环的方式来遍历多个元素。学习它很重要。")]),s._v(" "),n("h2",{attrs:{id:"列表长啥样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表长啥样"}},[s._v("¶")]),s._v(" 列表长啥样")]),s._v(" "),n("h3",{attrs:{id:"语法格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法格式"}},[s._v("¶")]),s._v(" 语法格式")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 伪代码")]),s._v("\n列表变量名 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 元素"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 元素"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("后边可以有多个无数个元素 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"代码示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[s._v("¶")]),s._v(" 代码示例")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记好这段代码，下边很多示例会用到")]),s._v("\nmyName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'小石头'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xing.org1^'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("181")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"格式特征"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#格式特征"}},[s._v("¶")]),s._v(" 格式特征")]),s._v(" "),n("ul",[n("li",[s._v("列表名是我自定义的，如示例中我的“myName”。")]),s._v(" "),n("li",[s._v("用等号给变量赋值，等号右边的就是列表。")]),s._v(" "),n("li",[s._v("列表中各元素需要用中括号包裹")]),s._v(" "),n("li",[s._v("中括号里可以包裹N多个元素")]),s._v(" "),n("li",[s._v("多个元素之间用英文逗号分割开")]),s._v(" "),n("li",[s._v("列表中的各个元素的类型可以是任何值")])]),s._v(" "),n("h2",{attrs:{id:"列表定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表定义"}},[s._v("¶")]),s._v(" 列表定义")]),s._v(" "),n("p",[s._v("定义一个列表")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[s._v("myName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'小石头'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xing.org1^'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("181")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"列表操作-提取单个：偏移量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表操作-提取单个：偏移量"}},[s._v("¶")]),s._v(" 列表操作 - 提取单个：偏移量")]),s._v(" "),n("h3",{attrs:{id:"什么是偏移量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是偏移量"}},[s._v("¶")]),s._v(" 什么是偏移量")]),s._v(" "),n("p",[s._v("偏移量（又叫 下标）就是每个元素的编号，从左边第一个元素开始，编号从0一直到正无穷。")]),s._v(" "),n("p",[s._v("我习惯叫“下标”。")]),s._v(" "),n("p",[s._v("​上例中，0就是偏移量。")]),s._v(" "),n("p",[s._v("通过偏移量来对列表进行索引（可理解为搜索定位），进而获取我们所需的元素。")]),s._v(" "),n("h3",{attrs:{id:"偏移量提取示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#偏移量提取示例"}},[s._v("¶")]),s._v(" 偏移量提取示例")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 得到“小石头”")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"偏移量值的大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#偏移量值的大小"}},[s._v("¶")]),s._v(" 偏移量值的大小")]),s._v(" "),n("p",[s._v("当偏移量的值是小于或等于“列表长度-1”的话，我们用偏移量获取列表中的元素，则返回的是列表中我们想要的这个元素。")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 得到“小石头”")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("但当偏移量大于“列表长度-1”时，将会报错"),n("code",[s._v("IndexError: list index out of range")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 偏移量超出——IndexError: list index out of range ")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("报错效果如下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:t(305),alt:"IndexError错误"}})]),s._v(" "),n("h3",{attrs:{id:"偏移量提取的结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#偏移量提取的结果"}},[s._v("¶")]),s._v(" 偏移量提取的结果")]),s._v(" "),n("p",[s._v("结果是列表内的一个元素，数据类型取决于提取出来的那个元素是什么类型的。")]),s._v(" "),n("h2",{attrs:{id:"列表操作-提取多个：切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表操作-提取多个：切片"}},[s._v("¶")]),s._v(" 列表操作 - 提取多个：切片")]),s._v(" "),n("p",[s._v("提取列表中的一个甚至多个元素用切片。具体切片是啥，见下边。")]),s._v(" "),n("h3",{attrs:{id:"切片简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切片简介"}},[s._v("¶")]),s._v(" 切片简介")]),s._v(" "),n("p",[s._v("写法上就是一个英文冒号，有时候左右会有数字，数字表示偏移量。")]),s._v(" "),n("p",[s._v("用冒号来截取列表元素的操作叫作切片。")]),s._v(" "),n("h3",{attrs:{id:"切片示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切片示例"}},[s._v("¶")]),s._v(" 切片示例")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ['小石头', 'xing.org1^', 181, True]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [181, True]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ['小石头', 'xing.org1^']")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [ 'xing.org1^', 181]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"切片作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切片作用"}},[s._v("¶")]),s._v(" 切片作用")]),s._v(" "),n("p",[s._v("是将列表中的一个或多个元素选中。选出来的可以是一个片段里的元素，所以会叫“切片”。")]),s._v(" "),n("p",[n("code",[s._v("冒号")]),s._v("搭配上"),n("code",[s._v("列表名")]),s._v("和"),n("code",[s._v("中括号")]),s._v("，就能将元素提取出来。")]),s._v(" "),n("h3",{attrs:{id:"切片选中规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切片选中规则"}},[s._v("¶")]),s._v(" 切片选中规则")]),s._v(" "),n("p",[s._v("1、冒号左边为空没有数字的话，就从列表的第一个元素开始截取，即偏移量从0开始取。")]),s._v(" "),n("p",[s._v("2、冒号右边为空没有数字的话，就一直取到列表的最后一个元素。")]),s._v(" "),n("p",[s._v("3、对于左边的数字，切片时是包含关系。")]),s._v(" "),n("p",[s._v("4、而对于右边的数字，切片时不会包括，会切到右边数字的前一个。当然，如果右边没有数字，会切到最后一个。\n比如说，你想切出来下标(偏移量)为2的元素，那么右边的数字就应该填3。因为他不会切3，而是切到3的前一个。")]),s._v(" "),n("h3",{attrs:{id:"切片提取的结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切片提取的结果"}},[s._v("¶")]),s._v(" 切片提取的结果")]),s._v(" "),n("p",[s._v("提取的结果是一个列表。可以理解为拷贝了list中的一段出来，然后放到了一个新的列表里。")]),s._v(" "),n("h2",{attrs:{id:"列表操作-增加：append"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表操作-增加：append"}},[s._v("¶")]),s._v(" 列表操作 - 增加：append()")]),s._v(" "),n("p",[s._v("向列表中增加一个元素用append，append是一个函数。用法使用列表调用即可。如下：")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 伪代码")]),s._v("\n列表变量名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"append参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#append参数"}},[s._v("¶")]),s._v(" append参数")]),s._v(" "),n("p",[s._v("1、"),n("strong",[s._v("参数类型")]),s._v("：不限。可以是字符串、数字这样的单个元素，也可以是列表、字典这样的集合元素。")]),s._v(" "),n("p",[s._v("2、"),n("strong",[s._v("参数个数")]),s._v("：一个，且必须填一个。如果多填或不填都会报"),n("code",[s._v("TypeError")]),s._v("错误。")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 报错TypeError，必须要一个参数")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 报错如下")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     myName.append()")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TypeError: append() takes exactly one argument (0 given)")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"append作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#append作用"}},[s._v("¶")]),s._v(" append作用")]),s._v(" "),n("p",[s._v("append"),n("code",[s._v("会把参数追加到列表的末尾")]),s._v("。")]),s._v(" "),n("p",[s._v("增加内容后，列表的长度就会加一，增加的元素就会放在列表的末尾位置。")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ['小石头', 'xing.org1^', 181, True, '']")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("一个空串被追加到了列表myName的末尾，成为最后一个元素。")]),s._v(" "),n("h2",{attrs:{id:"列表操作-移除：pop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表操作-移除：pop"}},[s._v("¶")]),s._v(" 列表操作 - 移除：pop()")]),s._v(" "),n("h3",{attrs:{id:"pop函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pop函数"}},[s._v("¶")]),s._v(" pop函数")]),s._v(" "),n("p",[s._v("用于移除列表中的一个元素。默认是移除最后一个元素，并且返回该元素的值")]),s._v(" "),n("h3",{attrs:{id:"pop示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pop示例"}},[s._v("¶")]),s._v(" pop示例")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[s._v("popResult "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ['小石头', 'xing.org1^', 181]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("popResult"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("上例代码中，我们可以观察到两个知识点：")]),s._v(" "),n("ul",[n("li",[s._v("list调用pop函数后，列表的最后一个元素被移除。")]),s._v(" "),n("li",[s._v("list被移除的那个元素赋值给popResult变量后就是"),n("code",[s._v("True")]),s._v("，这说明pop返回移除的元素。")])]),s._v(" "),n("h3",{attrs:{id:"pop作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pop作用"}},[s._v("¶")]),s._v(" pop作用")]),s._v(" "),n("p",[s._v("即可以删除列表内的最后一个元素，还能将其当作返回值提取出来，赋值给其他变量。")]),s._v(" "),n("h2",{attrs:{id:"列表操作-删除：del"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表操作-删除：del"}},[s._v("¶")]),s._v(" 列表操作 - 删除：del()")]),s._v(" "),n("h3",{attrs:{id:"del参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#del参数"}},[s._v("¶")]),s._v(" del参数")]),s._v(" "),n("p",[n("strong",[s._v("参数个数")]),s._v("：可1个，也可多个。")]),s._v(" "),n("h3",{attrs:{id:"删除单个：偏移量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除单个：偏移量"}},[s._v("¶")]),s._v(" 删除单个：偏移量")]),s._v(" "),n("p",[s._v("写法如下")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除掉True")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("填写你要删除元素所在列表内的偏移量到中括号中。用列表名[偏移量]的方式获取这个元素，然后当作参数传到del函数内当作参数即可将该元素从列表中删除。")]),s._v(" "),n("p",[s._v("上例中，偏移量3代表myName中的第四个元素“True”，用中括号+偏移量的方式提取出来后，再用del删除了。此时再打印myName发现“True”不在了。")]),s._v(" "),n("h3",{attrs:{id:"隔段删除-多个元素-：偏移量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隔段删除-多个元素-：偏移量"}},[s._v("¶")]),s._v(" 隔段删除(多个元素)：偏移量")]),s._v(" "),n("p",[s._v("发现了个有趣的例子，如下：")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("三个打印结果分别如下：")]),s._v(" "),n("blockquote",[n("p",[s._v("['小石头', 'xing.org1^', 181, True, '']")])]),s._v(" "),n("blockquote",[n("p",[s._v("['小石头', 'xing.org1^', 181, True]")])]),s._v(" "),n("blockquote",[n("p",[s._v("['小石头', 181]\n第一个和第二个的打印，应该没有问题，"),n("code",[s._v("myName.append('')")]),s._v("往list后边增加了一个，空串成为偏移量为4所对应的元素。然后又"),n("code",[s._v("del(myName[4])")]),s._v("删除了第四个元素，所以打印第二行的内容和原来没增加前的myName又一样了。")])]),s._v(" "),n("p",[s._v("但是第二个del我写的是"),n("code",[s._v("del(myName[1],myName[2])")]),s._v("，填写了两个参数，我希望删除“xing.org1^”和“181”这俩。")]),s._v(" "),n("p",[s._v("结果发现，删除的是“xing.org1^”和“True”。")]),s._v(" "),n("p",[s._v("我猜测它是先从“['小石头', 'xing.org1^', 181, True]”中删除第1个即“xing.org1^”。")]),s._v(" "),n("p",[s._v("之后列表变成“['小石头', 181, True]”，此时他再删除第2个，也就是“True”。")]),s._v(" "),n("p",[s._v("最后剩下了我们看到的打印结果：“['小石头', 181]”。")]),s._v(" "),n("p",[n("strong",[s._v("看来我们即使一次性向del中传递多个参数，他也是一个一个执行的。并且后一个参数删除是在前一个参数删除执行结果的基础上再做的工作。")])]),s._v(" "),n("h3",{attrs:{id:"删除片段-多个元素-：切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除片段-多个元素-：切片"}},[s._v("¶")]),s._v(" 删除片段(多个元素)：切片")]),s._v(" "),n("p",[n("a",{attrs:{href:"#切片选中规则"}},[s._v("切片选中规则")]),s._v("见上。")]),s._v(" "),n("p",[s._v("切片删除同偏移量一个原理。切片选中的片段被当作参数传递到del中，都会被删除。")]),s._v(" "),n("p",[s._v("所以直接看三个示例如下：")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 偏移量0、1选中，删除掉 小石头、xing.org1^。myName剩下[181,True]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 偏移量2、3选中，删除掉 181、True。myName剩下[小石头,xing.org1^]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 偏移量1、2选中，删除掉xing.org1^、181。myName剩下[小石头,True]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"删除整个：切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除整个：切片"}},[s._v("¶")]),s._v(" 删除整个：切片")]),s._v(" "),n("p",[s._v("用切片删除所有选中元素")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# myName成空list了。打印myName得到 []")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"删除整个：变量名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除整个：变量名"}},[s._v("¶")]),s._v(" 删除整个：变量名")]),s._v(" "),n("p",[s._v("del参数为变量名，则删除整个list列表。")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("del")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# myName就不存在了，再访问报“未定义”的错")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("⚠️myName被删除后，就不存在了，再访问就会报“"),n("a",{attrs:{href:"https://xingorg1.github.io/xingorg1Note/backEnd/python/03-errorType.html#nameerror-name-xingorg1-is-not-defined",target:"_blank",rel:"noopener noreferrer"}},[s._v("未定义"),n("OutboundLink")],1),s._v("”的错。")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("em",[s._v("以上，就是关于列表的一些知识点，不够完善我今后继续补充，希望对看到的你我有点帮助。")])]),s._v(" "),n("Vssue",{attrs:{title:"【Python】列表list"}})],1)},[],!1,null,null,null);a.default=e.exports}}]);